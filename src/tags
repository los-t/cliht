!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ERR_CFG	error.c	9;"	d	file:
ERR_CFG_HELPREQUEST	error.c	/^const ERROR_CODE ERR_CFG_HELPREQUEST = ERR_CFG + 2;$/;"	v
ERR_CFG_NOARGS	error.c	/^const ERROR_CODE ERR_CFG_NOARGS      = ERR_CFG + 1;$/;"	v
ERR_MEMFAIL	error.c	/^const ERROR_CODE ERR_MEMFAIL = 1;;$/;"	v
ERR_NONE	error.c	/^const ERROR_CODE ERR_NONE = 0;$/;"	v
ERR_URL	error.c	14;"	d	file:
ERR_URL_CANNOTPARSE	error.c	/^const ERROR_CODE ERR_URL_CANNOTPARSE = ERR_URL + 1;$/;"	v
ERR_URL_NOTENOUGHDATA	error.c	/^const ERROR_CODE ERR_URL_NOTENOUGHDATA = ERR_URL + 2;$/;"	v
OPT_HELP	option.c	/^const Option OPT_HELP    = { .lname = "--help",   .sname = "-h", .vname = "" };$/;"	v
OPT_OUTPATH	option.c	/^const Option OPT_OUTPATH = { .lname = "--output", .sname = "-o", .vname = "PATH" };$/;"	v
URL_DELIM_PORT	url.c	/^const char* URL_DELIM_PORT = ":";$/;"	v
URL_DELIM_PROTO	url.c	/^const char* URL_DELIM_PROTO = ":\/\/";$/;"	v
URL_DELIM_ROOT	url.c	/^const char* URL_DELIM_ROOT = "\/";$/;"	v
URL_DFLT_PATH	url.c	/^const char* URL_DFLT_PATH = "\/";$/;"	v
URL_DFLT_PORT	url.c	/^const long URL_DFLT_PORT = 80;$/;"	v
URL_DFLT_PROTO	url.c	/^const char* URL_DFLT_PROTO = "http";$/;"	v
arg_is	option.c	/^unsigned int arg_is(const char *arg, const Option opt) {$/;"	f
arg_is_long	option.c	/^unsigned int arg_is_long(const char *arg, const Option opt) {$/;"	f
arg_is_short	option.c	/^unsigned int arg_is_short(const char *arg, const Option opt) {$/;"	f
cfg_free	cfg.c	/^ERROR_CODE cfg_free(Configuration *cfg) {$/;"	f
cfg_init_from_cli	cfg.c	/^ERROR_CODE cfg_init_from_cli(int argc, char **argv, Configuration *cfg) {$/;"	f
init_from_str	utl.c	/^ERROR_CODE init_from_str(char** dest, const char* src, const size_t len) {$/;"	f
main	main.c	/^int main(int argc, char *argv[]) {$/;"	f
print_option	option.c	/^ERROR_CODE print_option(const Option opt, const char* desc) {$/;"	f
print_usage	option.c	/^void print_usage() {$/;"	f
set_value	cfg.c	/^ERROR_CODE set_value(char** opt, char* arg) {$/;"	f
url_alloc	url.c	/^ERROR_CODE url_alloc(Url* url) {$/;"	f
url_extract_host	url.c	/^ERROR_CODE url_extract_host(char** dst, const char* src) {$/;"	f
url_extract_path	url.c	/^ERROR_CODE url_extract_path(char** dst, const char* src) {$/;"	f
url_extract_port	url.c	/^ERROR_CODE url_extract_port(long* dst, const char* src) {$/;"	f
url_extract_proto	url.c	/^ERROR_CODE url_extract_proto(char** dst, const char* src) {$/;"	f
url_free	url.c	/^ERROR_CODE url_free(Url* url) {$/;"	f
url_init_from_str	url.c	/^ERROR_CODE url_init_from_str(Url* url, const char* str) {$/;"	f
url_to_str	url.c	/^ERROR_CODE url_to_str(Url* url, char* str, size_t len) {$/;"	f
